<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd">
           
<!-- 	<http pattern="/favicon.ico" security="none" />
	<http pattern="/resources/**" security="none" />
	<http auto-config="true" use-expressions="true"> 
    	<access-denied-handler error-page="/denied.html"/>
 		<intercept-url pattern="/login" access="permitAll" />   ROLE_ANONYMOUS =IS_AUTHENTICATED_ANONYMOUSLY
		<intercept-url pattern="/crash/**" access="permitAll" /> 	
		<intercept-url pattern="/test" access="permitAll" /> 				
		<intercept-url pattern="/member/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/app/**" access="hasRole('ROLE_ADMIN')" />	
		<intercept-url pattern="/statistics/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />	
		<intercept-url pattern="/analysis/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />	
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />		
		<form-login login-page="/login" 
					default-target-url="/index"  
					authentication-failure-url="/login?error" /> -->
<!-- 		<remember-me key="" token-validity-seconds="1296000" data-source-ref="dataSource" user-service-ref=""/>	 
		<logout     logout-url="/j_spring_security_logout" 
					logout-success-url="/login?logout"/>
 	
					authentication-success-handler-ref="AuthenticationSuccessHandler"  
	<csrf/>	  

	</http> -->
	
<!-- 	<beans:bean id="" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl" /> -->
	<authentication-manager>
		<authentication-provider > <!--   user-service-ref="" -->
			<jdbc-user-service data-source-ref="dataSource"
					users-by-username-query="SELECT MB_MID as username, MB_PASS as password, 1 as enable FROM CRS_MEMB WHERE MB_MID = ?"
					authorities-by-username-query="SELECT MB_NAME,MB_AUTH as AUTHORITY FROM CRS_MEMB WHERE MB_MID = ?"/>
 
<!-- 			<user-service>
				<user name="test" password="test" authorities="ROLE_USER"/>
				<user name="admin" password="admin" authorities="ROLE_ADMIN"/>
			</user-service> -->
		</authentication-provider>
	</authentication-manager>
<!--
	<http auto-config="false" create-session="always" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
		<intercept-url pattern="/login" access="permitAll" /> 
		<intercept-url pattern="/**" access="hasRole('role_user')" />
		<intercept-url pattern="/member/**" access="hasRole('role_admin')" />
		<intercept-url pattern="/app/**" access="hasRole('role_admin')" />	

		<access-denied-handler error-page="/error_403" />
		<logout invalidate-session="true" logout-success-url="/" logout-url="/logout" />

		<session-management><concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/></session-management>
		<custom-filter ref="authenticationFilter" position="FORM_LOGIN_FILTER" />
		<custom-filter after="EXCEPTION_TRANSLATION_FILTER" ref="ajaxSessionTimeoutFilter"/>
	</http>
	
	<beans:bean id="ajaxSessionTimeoutFilter" class="com.websitehealthcare.main.fw.util.AjaxSessionTimeoutFilter"/>

	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/login" />
	</beans:bean>

	<beans:bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="filterProcessesUrl" value="/j_spring_security_check" />
		<beans:property name="authenticationFailureHandler" ref="securityLoginFailureHandler" />
		<beans:property name="authenticationSuccessHandler" ref="securityLoginSuccessHandler" />
	</beans:bean>

	<beans:bean id="securityLoginSuccessHandler" class="com.edutotal.crs.common.SecurityLoginSuccessHandler"/>
	<beans:bean id="securityLoginFailureHandler" class="com.edutotal.crs.common.SecurityLoginFailureHandler"/>

	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder">
		<beans:constructor-arg value="SHA-512" />
		<beans:property name="iterations" value="999" />
		<beans:property name="encodeHashAsBase64" value="true" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder ref="passwordEncoder">
				<salt-source user-property="username" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>  
-->
</beans:beans>